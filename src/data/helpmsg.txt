Page is a programming language inspired by PostScript,
a programming language created by Adobe to generate graphics for use in generating PDFs and printing,
similarly to TeX and LaTeX.

PostScript is still used (albeit rarely) today (Oct 28, 2025).

PostScript (and Page) are stack-based languages,
so instead of `1 + 1`, expressions are written as `1 1 +`,
where `1` is pushed onto the stack, then another `1` is is pushed onto the stack. then `+` pops them off,
adds them together, and pushes the result (2, in this case)

Additionally, the math operators of PostScript and Page use names instead of symbols,
so '+' is `(.cyan)add(.reset)`, '-' is `(.cyan)sub(.reset)`, etc


If you want to learn what a builtin symbol does, you can use '(.magenta)doc(.reset)' to see its docstring.
e.g. `(.yellow)/add (.magenta)doc(.reset)`

If you want to see the docstring (if any) of a value, you can use '(.magenta)docof (.cyan)=(.reset)'.
e.g. `(.magenta)version docof (.cyan)=(.reset)`

You can use `(.magenta)psymbols(.reset)` to see a list of symbols in the current dictionary.

(.green)This help message has an extended version that can be shown by typing '(.magenta)exthelp(.green)'.(.reset)

For more information:
(.br-blue)https://en.wikipedia.org/wiki/PostScript(.reset)
